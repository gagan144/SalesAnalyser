/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package salesPackage;
import java.awt.Color;
import java.io.*;
import java.nio.channels.FileChannel;
import javax.swing.UIManager;
import javax.xml.crypto.Data;

public class Dialog_DbRestore extends javax.swing.JDialog {

    private DatabaseHandler db;
    private Configuration cnf;
    private boolean DONE=false;
    LogHandler log = new LogHandler();
    
    
    public Dialog_DbRestore(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        try{
              UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
          }catch(Exception e)
          {  System.out.println("Windows isn't available"); }
        
        initComponents();
        
        this.setLocationRelativeTo(null);  //Open at center of screen
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        lbl = new javax.swing.JLabel();
        btn_restore = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textA = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SPA | Database Restore Wizard");
        setMinimumSize(new java.awt.Dimension(400, 320));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setText("Click 'Restore' to perform restore operation !");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 55, 350, 30);
        getContentPane().add(jProgressBar);
        jProgressBar.setBounds(30, 115, 340, 14);
        getContentPane().add(lbl);
        lbl.setBounds(30, 95, 340, 15);

        btn_restore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restore_1.png"))); // NOI18N
        btn_restore.setBorderPainted(false);
        btn_restore.setContentAreaFilled(false);
        btn_restore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_restore.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restore_4.png"))); // NOI18N
        btn_restore.setFocusable(false);
        btn_restore.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restore_3.png"))); // NOI18N
        btn_restore.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restore_2.png"))); // NOI18N
        btn_restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restoreActionPerformed(evt);
            }
        });
        getContentPane().add(btn_restore);
        btn_restore.setBounds(95, 260, 90, 23);

        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/exit_1.png"))); // NOI18N
        btn_exit.setBorderPainted(false);
        btn_exit.setContentAreaFilled(false);
        btn_exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_exit.setFocusable(false);
        btn_exit.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/exit_3.png"))); // NOI18N
        btn_exit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/exit_2.png"))); // NOI18N
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        getContentPane().add(btn_exit);
        btn_exit.setBounds(215, 260, 90, 23);

        textA.setColumns(20);
        textA.setEditable(false);
        textA.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        textA.setRows(5);
        jScrollPane1.setViewportView(textA);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 135, 340, 105);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/Restore_topBar.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 400, 320);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        // TODO add your handling code here:
        if(DONE==true)
        {
            log.writeToLog(34);
            System.exit(0);            
        }
        else
        { dispose(); }
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_restoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restoreActionPerformed
        // TODO add your handling code here:
        restore();
    }//GEN-LAST:event_btn_restoreActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dialog_DbRestore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dialog_DbRestore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dialog_DbRestore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dialog_DbRestore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Dialog_DbRestore dialog = new Dialog_DbRestore(new javax.swing.JFrame(), true);
                                
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    
    void OpenDialog(DatabaseHandler d, Configuration c)
    {
        db=d;        
        cnf=c;        
    }
    
    private void restore()
    {
        boolean rflag=true;        
        String dbfileName="";
        
        btn_restore.setEnabled(false);
        
        //(1) Chek db Connection
        lbl.setText("Checking Database Connection...");
        textA.setText("Checking Database Connection...");
                
        int dbflag=db.checkConnection();
        
        System.out.println("Flag : "+dbflag);        
        
        if(dbflag==-1)
        {
            if(db.workBook.equals(""))
            {     
                dbfileName=cnf.databaseFilePath;                                
            }
            else
            {
                dbfileName=db.workBook;
            }
        }
        else
        {
            dbfileName=db.workBook;
        }
        jProgressBar.setValue(25);
        textA.setText(textA.getText()+"Done\n");
        
        //(2) Check backup file
        lbl.setText("Checking Backup File...");
        textA.setText(textA.getText()+"Checking Backup File...");
        
        File bkFile=new File("Data\\Backup\\backup.xls");
        if(bkFile.exists())
        {  
            rflag=true;  
            textA.setText(textA.getText()+"Found\n");
        }
        else
        {  
            rflag=false;              
            textA.setText(textA.getText()+"Not Found\n");
        } 
        jProgressBar.setValue(50);
                
        
        if(rflag==true)
        {
            log.writeToLog(24);
            //(3) Close Connections
            lbl.setText("Closing Database Connection...");
            textA.setText(textA.getText()+"Closing Database Connection...");
            db=null;
            jProgressBar.setValue(75);
            textA.setText(textA.getText()+"Done\n");
                      
            
            //(4) Copy bk file to path
            lbl.setText("Restoring File...");   
            textA.setText(textA.getText()+"Restoring File...");
            
            File dbFile =new File(dbfileName);
            FileChannel source = null;
            FileChannel destination = null;
        
            try 
            {
                source = new FileInputStream(bkFile).getChannel();
                destination = new FileOutputStream(dbFile).getChannel();            
            }catch(FileNotFoundException fnfe)
            {
                System.out.println(fnfe);
            }
            
            try
            {   
                long count = 0;
                long size = source.size();              
                while((count += destination.transferFrom(source, 0, size-count))<size);
                
                source.close();
                destination.close();
                
                lbl.setText("Restoring Completed!");
                textA.setText(textA.getText()+"Done\nRestore Successfull!\nYou are advised to close the application and restart again.\nPlease Click 'Exit' button to terminate the application!");
                textA.setCaretPosition(textA.getText().length()-1);
                
                DONE=true;
                jProgressBar.setValue(100);                                  
                log.writeToLog(31);
            
            }catch(IOException ioe)
            {  
                textA.setForeground(Color.red);
                textA.setText(textA.getText()+"An unknown error occurred while copying the file. Please retry again!\nMake sure that you have rights to perform write operation to your \ndatabase file directory!");
                log.writeToLog(33);
            }  
                  
            
        }
        else
        {
            lbl.setText(lbl.getText()+"Failed!");
            textA.setForeground(Color.red);
            textA.setText(textA.getText()+"Cannot perform restore operation since no backup was found!\nPlease Click 'Exit' button to return!");
        }
        
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_restore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl;
    private javax.swing.JTextArea textA;
    // End of variables declaration//GEN-END:variables
}
