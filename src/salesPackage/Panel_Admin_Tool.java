package salesPackage;

import java.io.*;
import java.nio.channels.FileChannel;
import java.util.Calendar;

public class Panel_Admin_Tool extends javax.swing.JPanel {

    /** Creates new form Panel_Admin_Tool */
    
    Configuration cnf = new Configuration();
    DatabaseHandler db = new DatabaseHandler();
    LogHandler log=new LogHandler();
    int maxrid=0;
    boolean write=false;
    
    public Panel_Admin_Tool() {
        initComponents();
        lb_missmatch.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Btn_save = new javax.swing.JButton();
        Btn_cancel = new javax.swing.JButton();
        chk_newCon = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        textF_dsn = new javax.swing.JTextField();
        textF_wb = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btn_format = new javax.swing.JButton();
        btn_getWrkBk = new javax.swing.JButton();
        passF_pass = new javax.swing.JPasswordField();
        paasF_cnf = new javax.swing.JPasswordField();
        lb_missmatch = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbl_lastBk = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_restore = new javax.swing.JButton();
        textA_restr = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btn_bakup = new javax.swing.JButton();
        textA_bk = new javax.swing.JTextArea();
        bd_border = new javax.swing.JLabel();
        pass_border = new javax.swing.JLabel();
        backup_border = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(900, 540));
        setLayout(null);

        Btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/save_1.png"))); // NOI18N
        Btn_save.setBorderPainted(false);
        Btn_save.setContentAreaFilled(false);
        Btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Btn_save.setFocusPainted(false);
        Btn_save.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/save_3.png"))); // NOI18N
        Btn_save.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/save_2.png"))); // NOI18N
        Btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_saveActionPerformed(evt);
            }
        });
        add(Btn_save);
        Btn_save.setBounds(325, 485, 90, 31);

        Btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/cancel_1.png"))); // NOI18N
        Btn_cancel.setBorderPainted(false);
        Btn_cancel.setContentAreaFilled(false);
        Btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Btn_cancel.setFocusPainted(false);
        Btn_cancel.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/cancel_3.png"))); // NOI18N
        Btn_cancel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/cancel_2.png"))); // NOI18N
        Btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_cancelActionPerformed(evt);
            }
        });
        add(Btn_cancel);
        Btn_cancel.setBounds(485, 485, 90, 31);

        chk_newCon.setForeground(new java.awt.Color(0, 102, 51));
        chk_newCon.setText("Create new Connection");
        chk_newCon.setContentAreaFilled(false);
        chk_newCon.setFocusPainted(false);
        chk_newCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_newConActionPerformed(evt);
            }
        });
        add(chk_newCon);
        chk_newCon.setBounds(155, 170, 160, 22);

        jLabel11.setText("Current DSN :");
        add(jLabel11);
        jLabel11.setBounds(160, 200, 100, 20);

        textF_dsn.setToolTipText("Data Source Name used in ODBC connection");
        textF_dsn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(12, 120, 73)));
        textF_dsn.setNextFocusableComponent(btn_getWrkBk);
        textF_dsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textF_dsnActionPerformed(evt);
            }
        });
        add(textF_dsn);
        textF_dsn.setBounds(270, 200, 140, 20);

        textF_wb.setEditable(false);
        textF_wb.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(12, 120, 73)));
        add(textF_wb);
        textF_wb.setBounds(160, 242, 250, 20);

        jLabel12.setText("WorkBook Path :");
        add(jLabel12);
        jLabel12.setBounds(160, 222, 90, 20);

        btn_format.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/format_1.png"))); // NOI18N
        btn_format.setBorderPainted(false);
        btn_format.setContentAreaFilled(false);
        btn_format.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_format.setDisabledIcon(null);
        btn_format.setFocusPainted(false);
        btn_format.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/format_3.png"))); // NOI18N
        btn_format.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/format_2.png"))); // NOI18N
        btn_format.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_formatActionPerformed(evt);
            }
        });
        add(btn_format);
        btn_format.setBounds(220, 272, 90, 23);

        btn_getWrkBk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/process_1.png"))); // NOI18N
        btn_getWrkBk.setBorderPainted(false);
        btn_getWrkBk.setContentAreaFilled(false);
        btn_getWrkBk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_getWrkBk.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/process_4.png"))); // NOI18N
        btn_getWrkBk.setFocusPainted(false);
        btn_getWrkBk.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/process_3.png"))); // NOI18N
        btn_getWrkBk.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/process_2.png"))); // NOI18N
        btn_getWrkBk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_getWrkBkActionPerformed(evt);
            }
        });
        add(btn_getWrkBk);
        btn_getWrkBk.setBounds(320, 272, 90, 23);

        passF_pass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(12, 120, 73)));
        passF_pass.setNextFocusableComponent(paasF_cnf);
        add(passF_pass);
        passF_pass.setBounds(700, 200, 136, 20);

        paasF_cnf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(12, 120, 73)));
        paasF_cnf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paasF_cnfActionPerformed(evt);
            }
        });
        add(paasF_cnf);
        paasF_cnf.setBounds(700, 230, 136, 20);

        lb_missmatch.setForeground(new java.awt.Color(255, 51, 51));
        lb_missmatch.setText("Password Mismatch!");
        add(lb_missmatch);
        lb_missmatch.setBounds(700, 260, 97, 14);

        jLabel15.setText("Confirm Password :");
        add(jLabel15);
        jLabel15.setBounds(570, 230, 93, 20);

        jLabel14.setText("Administrator Password :");
        add(jLabel14);
        jLabel14.setBounds(570, 200, 120, 20);

        lbl_lastBk.setForeground(new java.awt.Color(254, 0, 0));
        lbl_lastBk.setText("Last Backup created on :");
        add(lbl_lastBk);
        lbl_lastBk.setBounds(140, 420, 210, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(12, 120, 73));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Restore");
        add(jLabel2);
        jLabel2.setBounds(780, 420, 60, 15);

        btn_restore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restoreBtn_1.png"))); // NOI18N
        btn_restore.setBorderPainted(false);
        btn_restore.setContentAreaFilled(false);
        btn_restore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_restore.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restoreBtn_4.png"))); // NOI18N
        btn_restore.setFocusPainted(false);
        btn_restore.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restoreBtn_3.png"))); // NOI18N
        btn_restore.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/restoreBtn_2.png"))); // NOI18N
        btn_restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_restoreActionPerformed(evt);
            }
        });
        add(btn_restore);
        btn_restore.setBounds(780, 350, 60, 62);

        textA_restr.setColumns(20);
        textA_restr.setEditable(false);
        textA_restr.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        textA_restr.setRows(5);
        textA_restr.setText("Click on the button to run Database Restore Wizard to restore \ndatabase file from backup. You may wish to use this option in \ncase of damage or missing database file. Please note that if \nthe current file still exist, it will be replaced by last backup file.");
        textA_restr.setOpaque(false);
        add(textA_restr);
        textA_restr.setBounds(465, 360, 305, 60);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(12, 120, 73));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Backup");
        add(jLabel1);
        jLabel1.setBounds(58, 420, 65, 15);

        btn_bakup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/backup_1.png"))); // NOI18N
        btn_bakup.setBorderPainted(false);
        btn_bakup.setContentAreaFilled(false);
        btn_bakup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_bakup.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/backup_4.png"))); // NOI18N
        btn_bakup.setFocusPainted(false);
        btn_bakup.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/backup_3.png"))); // NOI18N
        btn_bakup.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/backup_3.png"))); // NOI18N
        btn_bakup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bakupActionPerformed(evt);
            }
        });
        add(btn_bakup);
        btn_bakup.setBounds(58, 350, 65, 65);

        textA_bk.setColumns(20);
        textA_bk.setEditable(false);
        textA_bk.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        textA_bk.setRows(5);
        textA_bk.setText("Click on the button to create backup of currently running \ndatabase. By doing so, the application will keep a copy of the\nexcel file, which later can be used to restore damaged or \nmissing database file.");
        textA_bk.setOpaque(false);
        add(textA_bk);
        textA_bk.setBounds(140, 360, 300, 60);

        bd_border.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/db_border.png"))); // NOI18N
        add(bd_border);
        bd_border.setBounds(39, 146, 392, 163);

        pass_border.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/pass_border.png"))); // NOI18N
        add(pass_border);
        pass_border.setBounds(469, 146, 392, 163);

        backup_border.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/backup_border.png"))); // NOI18N
        add(backup_border);
        backup_border.setBounds(39, 330, 822, 120);

        title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/settings/title_settings.png"))); // NOI18N
        add(title);
        title.setBounds(264, 25, 371, 96);

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/panel_bg_trans.png"))); // NOI18N
        bg.setFocusable(false);
        add(bg);
        bg.setBounds(0, 0, 900, 540);
    }// </editor-fold>//GEN-END:initComponents

    private void textF_dsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textF_dsnActionPerformed
        // TODO add your handling code here:
        chkDSN();
    }//GEN-LAST:event_textF_dsnActionPerformed

    private void btn_getWrkBkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_getWrkBkActionPerformed
        // TODO add your handling code here:     
        chkDSN();
    }//GEN-LAST:event_btn_getWrkBkActionPerformed

    private void paasF_cnfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paasF_cnfActionPerformed
        // TODO add your handling code here:        
        chkPass();
    }//GEN-LAST:event_paasF_cnfActionPerformed

    private void Btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_cancelActionPerformed
        // TODO add your handling code here:
        closePanel();
    }//GEN-LAST:event_Btn_cancelActionPerformed

    private void Btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_saveActionPerformed
        // TODO add your handling code here:
        saveSettings();        
    }//GEN-LAST:event_Btn_saveActionPerformed

    private void btn_restoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_restoreActionPerformed
        // TODO add your handling code here:
        Dialog_DbRestore d = new Dialog_DbRestore(null, true);
        d.OpenDialog(db,cnf);
        d.setVisible(true);
    }//GEN-LAST:event_btn_restoreActionPerformed

    private void chk_newConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_newConActionPerformed
        // TODO add your handling code here:
        if(chk_newCon.isSelected()==false)
        {
            textF_dsn.setEditable(false);
            textF_dsn.setText(db.dataSourceName);
            btn_format.setVisible(false);
            chkDSN();
            btn_getWrkBk.setEnabled(false);                    
            jLabel11.setText("Current DSN :");
            
        }else
        {
            textF_dsn.setEditable(true);
            textF_dsn.setText("");
            textF_wb.setText("");
            btn_getWrkBk.setEnabled(true);   
            btn_format.setVisible(false);
            jLabel11.setText("Data Source Name :");
        }
        
    }//GEN-LAST:event_chk_newConActionPerformed

    private void btn_formatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_formatActionPerformed
        // TODO add your handling code here:
        DatabaseHandler tmpDb = new DatabaseHandler();
        tmpDb.dataSourceName = textF_dsn.getText();
        tmpDb.createTable();
        SPA.MAXRID=99;
        textF_wb.setText("Formatting Done !");
        textF_wb.setCaretPosition(0);
        btn_format.setVisible(false);
        //chkDSN();
    }//GEN-LAST:event_btn_formatActionPerformed

    private void btn_bakupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bakupActionPerformed
        // TODO add your handling code here:
        createBackup();
    }//GEN-LAST:event_btn_bakupActionPerformed

    private void createBackup()
    {
        File sou=new File(db.workBook);        
        if(sou.exists()==false)
        {
            SPA.panelController("Database connectivity Error! Cannot find Workbook!", new int[]{1, 0, 2, 3, 4, 0});
        }
        else
        {
            log.writeToLog(23);
            Calendar cal= Calendar.getInstance();
            int month = cal.get(Calendar.MONTH);
            int year = cal.get(Calendar.YEAR);
            int day = cal.get(Calendar.DAY_OF_MONTH); 
            int hour= cal.get(Calendar.HOUR);
            int min= cal.get(Calendar.MINUTE);
            cnf.lastBackupDate=day+"/"+(month + 1)+"/"+year+", "+hour+":"+min;
            lbl_lastBk.setText("Last Backup created on : "+cnf.lastBackupDate); 
            
            //copy excel file
            File dirPath=new File("Data\\Backup");
            if(dirPath.exists()==false)
            {
                //System.out.println(dirPath.mkdirs());
                dirPath.mkdirs();
            }
               
            
            File dest= new File("Data\\Backup\\backup.xls");
        
            FileChannel source = null;
            FileChannel destination = null;
        
            try 
            {
                source = new FileInputStream(sou).getChannel();
                destination = new FileOutputStream(dest).getChannel();            
            }catch(FileNotFoundException fnfe)
            {
                System.out.println(fnfe);
            }
        
            try
            {   
                long count = 0;
                long size = source.size();              
                while((count += destination.transferFrom(source, 0, size-count))<size);
                
                source.close();
                destination.close();
                
                cnf.writeConfigFile();                
                write=true;
                btn_restore.setEnabled(false);
                log.writeToLog(31);
            
            }catch(IOException ioe)
            {  
                log.writeToLog(33);
                SPA.panelController("An Error occured while creating backup! Please try Later!", new int[]{2, 0, 5, 3, 4, 0});
            }  
            
        }
    }
    
    private boolean chkDSN()
    {
        DatabaseHandler tmpDb=new DatabaseHandler();
        tmpDb.dataSourceName=textF_dsn.getText();
        
        int db_chk=tmpDb.checkConnection();        
        
        
        if(db_chk==0)
        {
            textF_wb.setText("Data Source Name Not Found");
            return(false);
        }
        else if(db_chk==-1)
        {
            if(!tmpDb.workBook.equals("") && !tmpDb.checkReadOnly(false))
            {
                textF_wb.setText("Format Workbook : "+tmpDb.workBook);  
                textF_wb.setCaretPosition(0);
                btn_format.setVisible(true);                
        
            }
            else
            {
                btn_format.setVisible(false);
                textF_wb.setText("Incompatible or Missing Workbook!");
            }
            return(false);
        }
        else
        {
            textF_wb.setText(tmpDb.workBook);  
            maxrid=db_chk;
            System.out.println(maxrid);  //HIDE
            return(true);
        }
    }
    
    private boolean chkPass()
    {        
        if(passF_pass.getText().equals(paasF_cnf.getText()))
        {
            lb_missmatch.setVisible(false);            
            return(true);
        }
        else
        {
            lb_missmatch.setVisible(true);
            return(false);
        }
    }
    
    private void saveSettings()
    {
        //boolean write=false;
        boolean close=true;
        String dsn="",wb="",pass="";
        
        cnf.readConfigFile(true);
        
        if(chk_newCon.isSelected()==true)
        {
        if(textF_dsn.getText().equals(""))
        {  textF_wb.setText(null); }
        else
        { 
            if(chkDSN()==true)
            {   
                dsn=textF_dsn.getText();
                wb=textF_wb.getText();
                
                close=true;
            }
            else
            { close=false; SPA.panelController("Invalid Database Connection!", new int[]{2, 0, 4, 3, 4, 0}); }
        }
        }
        
        if(passF_pass.getText().equals(""))
        {  paasF_cnf.setText(null); }
        else
        { 
            if(close==true)
            {
            if(chkPass()==true)
            {   
                pass=passF_pass.getText();                
                close=true;                
            }
            else
            { close=false; SPA.panelController("Password Mismatch!", new int[]{2, 0, 4, 3, 4, 0}); }
            
            }
        }  
        
        
        if(close==true)
        { 
            if(dsn.equals(""))
            { }
            else
            {
                cnf.dataSourceName=db.dataSourceName=dsn;
                cnf.databaseFilePath=db.workBook=wb; 
                cnf.writeConfigFile();
                SPA.MAXRID=maxrid;
                write=true;
                
                System.out.println(cnf.dataSourceName+" "+cnf.databaseFilePath);
            }
            
            if(pass.equals(""))
            {}
            else
            {
                cnf.loginPass=pass;
                cnf.writeConfigFile();
                write=true;
                
                System.out.println(cnf.loginPass);
            }
            
            Dialog_reg_child d=new Dialog_reg_child(null, true);
            if(write==true)
            {                
                d.getMessage("All changes were saved\nsucccessfully.Click Ok to return\nto Main Menu!",2);
                d.setVisible(true);
            }
            else
            {                
                d.getMessage("No changes were made.\nClick Ok to return to Main Menu!",2);
                d.setVisible(true);
            }
            
            
            closePanel(); 
        }
        
    }
    
    void openPanel(DatabaseHandler d, Configuration c)
    {
        db=d;
        cnf=c;
        
        btn_format.setVisible(false);
        
        //db
        chk_newCon.setSelected(false);
        textF_dsn.setEditable(false);
        textF_dsn.setText(db.dataSourceName);
        chkDSN();
        btn_getWrkBk.setEnabled(false);                    
        jLabel11.setText("Current DSN :");
        
        if(cnf.lastBackupDate.equals(""))
        { lbl_lastBk.setText("Last Backup created on : "+"----"); }
        else
        { lbl_lastBk.setText("Last Backup created on : "+cnf.lastBackupDate); }
        
    }
    
    private void closePanel()
    {
        textF_dsn.setText(null);
        textF_wb.setText(null);
        passF_pass.setText(null);
        paasF_cnf.setText(null);
        lb_missmatch.setVisible(false);
        btn_restore.setEnabled(true);
        write=false;
        SPA.panelController(null, new int[]{0, 0, 0, 3, 0, 0});
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_cancel;
    private javax.swing.JButton Btn_save;
    private javax.swing.JLabel backup_border;
    private javax.swing.JLabel bd_border;
    private javax.swing.JLabel bg;
    private javax.swing.JButton btn_bakup;
    private javax.swing.JButton btn_format;
    private javax.swing.JButton btn_getWrkBk;
    private javax.swing.JButton btn_restore;
    private javax.swing.JCheckBox chk_newCon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lb_missmatch;
    private javax.swing.JLabel lbl_lastBk;
    private javax.swing.JPasswordField paasF_cnf;
    private javax.swing.JPasswordField passF_pass;
    private javax.swing.JLabel pass_border;
    private javax.swing.JTextArea textA_bk;
    private javax.swing.JTextArea textA_restr;
    private javax.swing.JTextField textF_dsn;
    private javax.swing.JTextField textF_wb;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
