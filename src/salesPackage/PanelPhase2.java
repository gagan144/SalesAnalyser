package salesPackage;

import java.util.Calendar;

public class PanelPhase2 extends javax.swing.JPanel {

   
    public PanelPhase2() {
        initComponents();
        
        initializeYearColumns();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingLabel = new javax.swing.JLabel();
        ques2aLabel = new javax.swing.JLabel();
        heading2Label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(900, 540));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(900, 540));
        setLayout(null);

        headingLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        headingLabel.setText("Your Current Sales Process (Business) Productivity :");
        add(headingLabel);
        headingLabel.setBounds(60, 80, 340, 14);

        ques2aLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ques2aLabel.setText("Please indicate the achievement in the last 03 fiscal years (In decsending order of year):");
        add(ques2aLabel);
        ques2aLabel.setBounds(76, 105, 530, 14);

        heading2Label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        heading2Label.setText("Clients Touched to Prospects to Leads to Sales Conversion :");
        add(heading2Label);
        heading2Label.setBounds(60, 260, 390, 15);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Please indicate the achievement in the last 03 fiscal years (In decsending order of year):");
        add(jLabel2);
        jLabel2.setBounds(76, 285, 510, 15);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)}
            },
            new String [] {
                "Year", "Expected No. of Clients", "Actual No. of Clients", "Expected Sales Revenue (Cr)", "Actual Sales Revenue (Cr)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);

        add(jScrollPane1);
        jScrollPane1.setBounds(76, 130, 747, 88);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                { new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)}
            },
            new String [] {
                "Year", "Clients Touched (CT)", "Prospects (P)", "Leads (L)", "Sales (S)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setResizable(false);
        jTable2.getColumnModel().getColumn(1).setResizable(false);
        jTable2.getColumnModel().getColumn(2).setResizable(false);
        jTable2.getColumnModel().getColumn(3).setResizable(false);
        jTable2.getColumnModel().getColumn(4).setResizable(false);

        add(jScrollPane2);
        jScrollPane2.setBounds(76, 310, 747, 88);

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("NOTE : Please hit enter after every entry you make in a cell. Else the values may not be accepted!");
        add(jLabel1);
        jLabel1.setBounds(76, 410, 550, 14);

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salesPackage/Images/panel_bg_trans.png"))); // NOI18N
        bg.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        add(bg);
        bg.setBounds(0, 0, 900, 540);

        getAccessibleContext().setAccessibleName("phase2");
    }// </editor-fold>//GEN-END:initComponents

    
    //----------------------- MyMethods-----------------------
    
    void initializeYearColumns()
    {
        Calendar cal= Calendar.getInstance();       
        int y=cal.get(Calendar.YEAR);       
        
        jTable1.getModel().setValueAt(y,0,0);
        jTable1.getModel().setValueAt(y-1,1,0);
        jTable1.getModel().setValueAt(y-2,2,0);
        
        jTable2.getModel().setValueAt(y,0,0);
        jTable2.getModel().setValueAt(y-1,1,0);
        jTable2.getModel().setValueAt(y-2,2,0);
    }
    
    
    public boolean assignAllData(Record ref)
    {
        //String errMsg="Please complete all Entries!\nMake sure you have hit 'Enter' key after every cell entry!";
        int tmp;
        System.out.println("checking data of panel 2- tabels");
        
        try
        {
            if(jTable1.isEditing() || jTable2.isEditing())
            {
                throw new Exception("Please complete editing Table. (Use Enter Key)");
            }
        
        //check table 1
             for(int i=0;i<3;i++)
             {            
                 if( (Integer)jTable1.getModel().getValueAt(i,1)<(Integer)jTable1.getModel().getValueAt(i,2)  )
                 { throw new Exception("Actual no. of clients cannot be greater than Expected No. of Clients!");  }
         
                 if( (Integer)jTable1.getModel().getValueAt(i,3)<(Integer)jTable1.getModel().getValueAt(i,4)  )
                 { throw new Exception("Actual Sales Revenue cannot be greater than Expected Expected Sales Revenue!");  }
             }
             
         //check table 2
             for(int i=0;i<3;i++)
             {            
                 if( (Integer)jTable2.getModel().getValueAt(i,1)<(Integer)jTable2.getModel().getValueAt(i,2)  )
                 { throw new Exception("Prospects cannot be greater than Clients Touched!");  }
         
                 if( (Integer)jTable2.getModel().getValueAt(i,2)<(Integer)jTable2.getModel().getValueAt(i,3)  )
                 { throw new Exception("Leads cannot be greater than Prospects!");  }
                 
                 if( (Integer)jTable2.getModel().getValueAt(i,3)<(Integer)jTable2.getModel().getValueAt(i,4)  )
                 { throw new Exception("Sales cannot be greater than Leads!");  }
                 
             }
        
             
             for(int i=0;i<3;i++)
             {
                 for(int j=0;j<5;j++)
                 {                
                     tmp=(Integer)jTable1.getModel().getValueAt(i,j); 
                     ref.phase2a[i][j]=tmp;
                     
                     tmp=(Integer)jTable2.getModel().getValueAt(i,j);                 
                     ref.phase2b[i][j]=tmp;                
                 }           
             } 
             
        }catch(Exception e)
        { 
            if(e.getMessage()==null)
            { SPA.panelController("Empty cells are not allowed! Use '0' instead!", new int[]{2,0,3,3,1,0}); } //System.out.println("Empty cells are not allowed! Use '0' instead!"); }
            else
            { SPA.panelController(e.getMessage(), new int[]{2,0,4,3,1,0}); }
            return(false);
        }
        
        SPA.panelController(null, new int[]{0,0,0,3,1,0});
        return(true);
    }
    
    void resetPanel()
    {
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<5;j++)
            {
                jTable1.getModel().setValueAt(0, i, j);
                jTable2.getModel().setValueAt(0, i, j);
            }
        }
        initializeYearColumns();
    }
    
    void loadPanel(Record r)
    {
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<5;j++)
            {
                jTable1.getModel().setValueAt(r.phase2a[i][j], i, j);
                jTable2.getModel().setValueAt(r.phase2b[i][j], i, j);
            }
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JLabel heading2Label;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel ques2aLabel;
    // End of variables declaration//GEN-END:variables
}
